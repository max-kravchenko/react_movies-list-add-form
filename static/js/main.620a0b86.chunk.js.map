{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","invaidUrl","setinvalidUrl","touched","setTouched","hasError","trim","handleInput","event","target","htmlFor","classNames","type","placeholder","match","Error","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setimdbUrl","setImdbId","disableConditions","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","prevMovieList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.620a0b86.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (event: string) => void,\n};\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [invaidUrl, setinvalidUrl] = useState(false);\n\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value.trim();\n\n  const handleInput = (event: { target: { value: string; }; }) => {\n    onChange(event.target.value);\n  };\n\n  const handleUrlCheck = (event: { target: { value: string; }; }) => {\n    onChange(event.target.value);\n\n    if (!event.target.value.match(pattern)) {\n      switch (name) {\n        case 'imgUrl':\n        case 'imdbUrl':\n          handleInput(event);\n          setinvalidUrl(true);\n          break;\n\n        case 'title':\n        case 'description':\n        case 'imdbId':\n          handleInput(event);\n          break;\n\n        default:\n          throw new Error();\n      }\n    }\n\n    if (event.target.value.match(pattern)) {\n      switch (name) {\n        case 'imgUrl':\n        case 'imdbUrl':\n          handleInput(event);\n          setinvalidUrl(false);\n          break;\n\n        default:\n          throw new Error();\n      }\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || invaidUrl,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={handleUrlCheck}\n          onBlur={() => {\n            setTouched(true);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {invaidUrl && (\n        <p className=\"notification is-danger\">\n          Try entering a valid url\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setimdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const handleFormReset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setimdbUrl('');\n    setImdbId('');\n  };\n\n  const handleMovieAddition = (event: FormEvent) => {\n    event.preventDefault();\n    onAdd({\n      title, description, imgUrl, imdbUrl, imdbId,\n    });\n    setCount(prevCount => prevCount + 1);\n\n    handleFormReset();\n  };\n\n  const disableConditions = !(title.trim() && imgUrl.trim()\n  && imdbId.trim() && imdbUrl.trim());\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleMovieAddition}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setimdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            disabled={disableConditions}\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const handleMovieAddition = (movie: Movie) => {\n    setMovies(prevMovieList => [...prevMovieList, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleMovieAddition} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}